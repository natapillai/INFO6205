C:\Users\natap\.jdks\openjdk-19.0.2\bin\java.exe "-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.3.1\lib\idea_rt.jar=50004:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.3.1\bin" -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8 -classpath "C:\Users\natap\OneDrive\Northeastern University Work\Spring 2023\INFO6205\Robin\Class Repository\INFO6205\target\classes;C:\Users\natap\.m2\repository\com\phasmidsoftware\args_2.13\1.0.3\args_2.13-1.0.3.jar;C:\Users\natap\.m2\repository\org\scala-lang\scala-library\2.13.7\scala-library-2.13.7.jar;C:\Users\natap\.m2\repository\org\scala-lang\modules\scala-parser-combinators_2.13\1.1.2\scala-parser-combinators_2.13-1.1.2.jar;C:\Users\natap\.m2\repository\org\apache\logging\log4j\log4j-api\2.19.0\log4j-api-2.19.0.jar;C:\Users\natap\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\natap\.m2\repository\com\google\guava\guava\31.1-jre\guava-31.1-jre.jar;C:\Users\natap\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\natap\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\natap\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\natap\.m2\repository\org\checkerframework\checker-qual\3.12.0\checker-qual-3.12.0.jar;C:\Users\natap\.m2\repository\com\google\errorprone\error_prone_annotations\2.11.0\error_prone_annotations-2.11.0.jar;C:\Users\natap\.m2\repository\com\google\j2objc\j2objc-annotations\1.3\j2objc-annotations-1.3.jar;C:\Users\natap\.m2\repository\org\ini4j\ini4j\0.5.4\ini4j-0.5.4.jar" edu.neu.coe.info6205.util.InsertionSORT_Benchmark

Insertion sort for Randomly ordered arrays:
2023-02-04 21:19:04 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 10 takes a mean time of 8.0952E-4
2023-02-04 21:19:04 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 20 takes a mean time of 6.0739E-4
2023-02-04 21:19:04 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 40 takes a mean time of 0.00141533
2023-02-04 21:19:04 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 80 takes a mean time of 0.0043254
2023-02-04 21:19:04 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 160 takes a mean time of 0.01668904
2023-02-04 21:19:04 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 320 takes a mean time of 0.06180172
2023-02-04 21:19:04 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 640 takes a mean time of 0.21564485
2023-02-04 21:19:07 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 1280 takes a mean time of 0.82802667

Insertion sort for Ordered arrays:
2023-02-04 21:19:15 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 10 takes a mean time of 1.7825E-4
2023-02-04 21:19:15 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 20 takes a mean time of 1.3435999999999998E-4
2023-02-04 21:19:15 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 40 takes a mean time of 1.7001E-4
2023-02-04 21:19:15 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 80 takes a mean time of 2.718E-4
2023-02-04 21:19:15 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 160 takes a mean time of 0.00120516
2023-02-04 21:19:15 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 320 takes a mean time of 0.00119903
2023-02-04 21:19:15 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 640 takes a mean time of 0.0024393799999999997
2023-02-04 21:19:15 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 1280 takes a mean time of 0.00424189

Insertion sort for Partially ordered arrays:
2023-02-04 21:19:15 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 10 takes a mean time of 3.5558E-4
2023-02-04 21:19:15 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 20 takes a mean time of 3.7793E-4
2023-02-04 21:19:15 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 40 takes a mean time of 7.326800000000001E-4
2023-02-04 21:19:15 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 80 takes a mean time of 0.00218614
2023-02-04 21:19:15 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 160 takes a mean time of 0.008908899999999999
2023-02-04 21:19:15 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 320 takes a mean time of 0.03521216
2023-02-04 21:19:15 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 640 takes a mean time of 0.12484272
2023-02-04 21:19:17 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 1280 takes a mean time of 0.47531732000000004

Insertion sort for Reverse-ordered arrays:
2023-02-04 21:19:22 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 10 takes a mean time of 2.4825E-4
2023-02-04 21:19:22 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 20 takes a mean time of 6.7227E-4
2023-02-04 21:19:22 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 40 takes a mean time of 0.00237049
2023-02-04 21:19:22 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 80 takes a mean time of 0.008681870000000001
2023-02-04 21:19:22 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 160 takes a mean time of 0.03398839
2023-02-04 21:19:22 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 320 takes a mean time of 0.1232317
2023-02-04 21:19:23 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 640 takes a mean time of 0.47282052
2023-02-04 21:19:28 INFO  Benchmark_Timer - Begin run: Insertion Sort-Benchmarking with 10,000 runs
Array size 1280 takes a mean time of 1.84360869

Process finished with exit code 0
